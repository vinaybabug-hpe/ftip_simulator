######################## 2nd object

				float dist, min_dist;


				/* find the cluster id that has min distance to object */
				index    = 0;
				//min_dist = distancematrix(numCoords, objects, clusters, oIndex, 0, cdist, 0);
				
				float term1 = data1[i][0] - clusters[0][0];
				result += term1*term1;
				float term2 = data1[i][1] - clusters[0][1];
				result += term2*term2;
				
				min_dist = result;


				result = 0;
				// CLUSTER 0
					float term1 = data1[i][0] - clusters[0][0];
					result += term1*term1;
					float term2 = data1[i][1] - clusters[0][1];
					result += term2*term2;
					
					/* no need square root */
					if (result < min_dist) { /* find the min and its array index */
						min_dist = result;
						index    = 0;
					}
					
				
				result = 0;
				// CLUSTER 1
					float term1 = data1[i][0] - clusters[1][0];
					result += term1*term1;
					float term2 = data1[i][1] - clusters[1][1];
					result += term2*term2;
					
					/* no need square root */
					if (result < min_dist) { /* find the min and its array index */
						min_dist = result;
						index    = 1;
					}					
				
		

            /* if membership changes, increase delta by 1 */
            if (membership[i] != index) delta += 1.0;

            /* assign the membership to object i */
            membership[i] = index;

            /* update new cluster center : sum of objects located within */
            newClusterSize[index]++;
            newClusters[index][0] += objects[i][0];
			newClusters[index][1] += objects[i][1];
		########################
		
membership =
0
-1
-1
-1
-1
-1
-1
-1

newClusterSize =
1
0

newClusters = 
0+18 23+2
4 6

		########################